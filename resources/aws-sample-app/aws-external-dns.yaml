apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-dns-public
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: external-dns-public
rules:
  - apiGroups: [""]
    resources: ["services","endpoints","pods", "nodes"]
    verbs: ["get","watch","list"]
  - apiGroups: ["extensions","networking.k8s.io"]
    resources: ["ingresses"]
    verbs: ["get","watch","list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: external-dns-viewer-public
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-dns-public
subjects:
  - kind: ServiceAccount
    name: external-dns-public
    namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: external-dns-public
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: external-dns-public
  template:
    metadata:
      labels:
        app: external-dns-public
    spec:
          serviceAccountName: external-dns-public
          containers:
            - name: external-dns-public
              image: registry.k8s.io/external-dns/external-dns:v0.14.0
              args:
                - --ingress-class=public-ingress
                - --source=service
                - --source=ingress
                - --domain-filter=sandbox.launch.nttdata.com # limit to only sandbox.launch.nttdata.com subdomain
                - --provider=aws
                - --aws-zone-type=public
                - --txt-prefix=extdnspublic-
              env:
                - name: AWS_SDK_LOAD_CONFIG
                  value: "true"
                - name: AWS_SHARED_CREDENTIALS_FILE
                  value: "/etc/aws/credentials/aws-credentials.ini"
              volumeMounts:
                - name: aws-config-file-public
                  mountPath: /etc/aws/credentials
                  readOnly: true
          volumes:
            - name: aws-config-file-public
              secret:
                secretName: aws-config-file-public # pragma: allowlist secret
